cmake_minimum_required(VERSION 3.5)
project(examples_rclcpp_minimal_action_client)
#大纲，project后面是节点名
# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()
#编译器支持的标准
if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic) #-Wshadow -Werror
endif()
#编译器报错设置
find_package(ament_cmake REQUIRED)
find_package(example_interfaces REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclcpp_action REQUIRED)
#寻找依赖包
add_executable(action_client_member_functions member_functions.cpp)
ament_target_dependencies(action_client_member_functions
  "rclcpp"
  "rclcpp_action"
  "example_interfaces")
#构建可执行目标文件（构建目标文件名，源文件）
add_executable(action_client_not_composable not_composable.cpp)
ament_target_dependencies(action_client_not_composable
  "rclcpp"
  "rclcpp_action"
  "example_interfaces")
#指定可执行文件链接的库
add_executable(action_client_not_composable_with_cancel not_composable_with_cancel.cpp)
ament_target_dependencies(action_client_not_composable_with_cancel
  "rclcpp"
  "rclcpp_action"
  "example_interfaces")

add_executable(action_client_not_composable_with_feedback not_composable_with_feedback.cpp)
ament_target_dependencies(action_client_not_composable_with_feedback
  "rclcpp"
  "rclcpp_action"
  "example_interfaces")

#add_library()构建库

install(TARGETS
  action_client_member_functions
  action_client_not_composable
  action_client_not_composable_with_cancel
  action_client_not_composable_with_feedback
  DESTINATION lib/${PROJECT_NAME})

ament_package()